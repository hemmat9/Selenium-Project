Relative using attributes
1. inspecting using attributes
//tagname[@attribue='attribute value']

2. inspecting using text
//tagname[test()='text']

3. identify by using contain method
//tagname[contains(@attribute,'attribute value']
//tagname[contains(text(),'partial text')]

Example:
<input class="form", id="form0">
//input[contains(@id,'form')]

4.identifying using starts-with method.
will identify the elements with the starting partial value

//tagname[starts-with(@attribute,'partial starting value')]
//tagname[starts-with(text(),'partial starting text')]

-----------------------Topic advance Xpath-----------------------------
Advance Xpath is based upon parent child sibling ancestor relationship

1.Identifying element using following sibling

//tagname[@attribute = 'attribute value']/following-sibling::tagname of sibling ---->  (for following sibling)
//tagname[@attribute = 'attribute value']/preceding-sibling::tagname of sibling ---->   (for preceding sibling)
go to the tagname whose has attribute with value 'attribute value' now get me the following sibling of this tag

//input[@id = 'mesage']/following-sibling::label
go to the tagname input which has the attribute id with value message now get me its following sibling with tagname label
----> in order to use this advance path (following sibling we need to identify one sibling that can be identified uniquely.

Example of finding instagram login button
(//div[@class='-MzZI'])[2]/following-sibling::div[1]

2: Preceding sibling
//tagname[text()='text']/preceding-sibling::tagname

3:parent
how to find the login button of instagram with child parent relationship
//button[@type='submit']/parent::div

4: Ancestor
how to find the ancestor whose tag name is div (child ancestor relationship)
//button[@type='submit']/ancestor::div

--------------------------------CSS selector---------------------------
CSS (Cascading Styling Sheet)
1. they are very fast
2. easily readable

CSS does not allow to locate using text()
syntax:
tagname[attribute='attribute value']

Shortcut for CSS:
for ID-->#
tagname#valueofattributeid

for class--> '.'
tagname.valueofclass

contain method in css:
* symbol represents the contains method
tagname[attribute *='partial attribute value']
Example: input[name *='txtU']

Starts with method in css
^ symbol represents starts with method in css
tagname[attribute ^='partial attribute value']

ends-with method in CSS:
$ symbols represents the endwith method
tagname[attribute $='partial attribute value']
example:
img[src $='ax.png']

